buildscript {
    ext {
        springBootVersion = '2.0.3.RELEASE'
        postgesqlVersion = '42.2.0'
    }
    repositories {
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}",
                "nu.studer:gradle-jooq-plugin:2.0.11",
                "org.liquibase:liquibase-gradle-plugin:1.2.4",
                "org.postgresql:postgresql:$postgesqlVersion",
                "se.transmode.gradle:gradle-docker:1.2")

    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'nu.studer.jooq'
apply plugin: 'org.liquibase.gradle'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'docker'

group = 'us.martink.todo-server'
version = '0.0.9-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-jooq')
    compile('org.springframework.boot:spring-boot-starter-web')
    runtime('org.springframework.boot:spring-boot-devtools')
    runtime('org.postgresql:postgresql')
    jooqRuntime ("org.postgresql:postgresql:$postgesqlVersion")
    compileOnly('org.projectlombok:lombok')
}

liquibase {
    activities {
        main {
            changeLogFile 'src/main/resources/db/changelog/liquibase-changelog.sql'
            url 'jdbc:postgresql://localhost/todo'
            username 'postgres'
            password 'qwerty'
        }
    }
}

jooq {
    todos(sourceSets.main) {
        jdbc {
            driver = 'org.postgresql.Driver'
            url = 'jdbc:postgresql://localhost/todo'
            user = 'postgres'
            password = 'qwerty'
            schema = 'public'
        }
        generator {
            name = 'org.jooq.util.DefaultGenerator'
            strategy {
                name = 'org.jooq.util.DefaultGeneratorStrategy'
            }
            database {
                name = 'org.jooq.util.postgres.PostgresDatabase'
                inputSchema = 'public'
            }
            generate {
                pojos = true
                javaTimeTypes = true
                sequences = true
            }
            target {
                packageName = 'us.martink.todoserver'
                directory = 'src/main/generated/java'
            }
        }
    }
}
task preBuild() {
    dependsOn 'update'
    dependsOn 'generateTodosJooqSchemaSource'
    tasks.findByName('generateTodosJooqSchemaSource').mustRunAfter 'update'
}

task buildDocker(type: Docker, dependsOn: build) {
    baseImage = 'java:8'
    push = project.hasProperty('push')
    tag = 's33kers/todo-server'
    addFile {
        from jar
        rename {'app.jar'}
    }
    entryPoint(['java', '-Djava.security.egd=file:/dev/./urandom', '-jar', '/app.jar'])
    exposePort(8080)
}