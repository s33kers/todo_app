buildscript {
    ext {
        springBootVersion = '2.0.3.RELEASE'
        postgesqlVersion = '42.2.0'
        jooqVersion = '3.10.7'
    }
    repositories {
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}",
                "nu.studer:gradle-jooq-plugin:2.0.11",
                "org.liquibase:liquibase-gradle-plugin:1.2.4",
                "org.postgresql:postgresql:$postgesqlVersion",
                "se.transmode.gradle:gradle-docker:1.2",
                "org.jooq:jooq-meta-extensions:$jooqVersion")
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'nu.studer.jooq'
apply plugin: 'org.liquibase.gradle'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'docker'

sourceCompatibility = 1.8
version = '1.0.0'

jar {
    group = 's33kers'
    baseName = 'todo-server'
}

repositories {
    mavenCentral()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-jooq')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.liquibase:liquibase-core')
    runtime('org.springframework.boot:spring-boot-devtools')
    runtime('org.postgresql:postgresql')
    jooqRuntime ("org.jooq:jooq-meta-extensions:$jooqVersion")
}

jooq {
    version = "3.10.7"
    todos(sourceSets.main) {
        generator {
            name = 'org.jooq.util.DefaultGenerator'
            strategy {
                name = 'org.jooq.util.DefaultGeneratorStrategy'
            }
            database {
                name = 'org.jooq.util.ddl.DDLDatabase'
                properties {
                    property {
                        key = 'scripts'
                        value = 'src/main/resources/db/changelog/liquibase-changelog.sql'
                    }
                }
            }
            generate {
                pojos = true
                javaTimeTypes = true
                sequences = true
            }
            target {
                packageName = 'us.martink.todoserver'
                directory = 'src/main/generated/java'
            }
        }
    }
}

task buildDocker(type: Docker, dependsOn: build) {
    push = true
    tag = 's33kers/todo-server'
    applicationName = jar.baseName
    dockerfile = file('Dockerfile')
    doFirst {
        copy {
            from jar
            rename {'app.jar'}
            into stageDir
        }
    }
}