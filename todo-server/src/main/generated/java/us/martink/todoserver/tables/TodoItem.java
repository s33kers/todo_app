/*
 * This file is generated by jOOQ.
*/
package us.martink.todoserver.tables;


import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import us.martink.todoserver.Public;
import us.martink.todoserver.tables.records.TodoItemRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TodoItem extends TableImpl<TodoItemRecord> {

    private static final long serialVersionUID = -1117790710;

    /**
     * The reference instance of <code>PUBLIC.TODO_ITEM</code>
     */
    public static final TodoItem TODO_ITEM = new TodoItem();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TodoItemRecord> getRecordType() {
        return TodoItemRecord.class;
    }

    /**
     * The column <code>PUBLIC.TODO_ITEM.ID</code>.
     */
    public final TableField<TodoItemRecord, Long> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.TODO_ITEM.CREATED</code>.
     */
    public final TableField<TodoItemRecord, LocalDateTime> CREATED = createField("CREATED", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>PUBLIC.TODO_ITEM.CONTENT</code>.
     */
    public final TableField<TodoItemRecord, String> CONTENT = createField("CONTENT", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>PUBLIC.TODO_ITEM.ARCHIVED</code>.
     */
    public final TableField<TodoItemRecord, Boolean> ARCHIVED = createField("ARCHIVED", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("FALSE", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>PUBLIC.TODO_ITEM</code> table reference
     */
    public TodoItem() {
        this(DSL.name("TODO_ITEM"), null);
    }

    /**
     * Create an aliased <code>PUBLIC.TODO_ITEM</code> table reference
     */
    public TodoItem(String alias) {
        this(DSL.name(alias), TODO_ITEM);
    }

    /**
     * Create an aliased <code>PUBLIC.TODO_ITEM</code> table reference
     */
    public TodoItem(Name alias) {
        this(alias, TODO_ITEM);
    }

    private TodoItem(Name alias, Table<TodoItemRecord> aliased) {
        this(alias, aliased, null);
    }

    private TodoItem(Name alias, Table<TodoItemRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TodoItem as(String alias) {
        return new TodoItem(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TodoItem as(Name alias) {
        return new TodoItem(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TodoItem rename(String name) {
        return new TodoItem(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TodoItem rename(Name name) {
        return new TodoItem(name, null);
    }
}
